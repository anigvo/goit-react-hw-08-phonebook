{"version":3,"file":"static/js/234.8aec623a.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport Button from '@mui/material/Button';\n\nconst Li = styled.li`\n  color: #444444;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n\nconst DeleteButton = styled(Button)`\n  &:hover {\n    background: #1976d2;\n    color: white;\n  }\n`;\n\nexport { Li, DeleteButton };\n","import PropTypes from 'prop-types';\nimport { Li, DeleteButton } from './ContactItem.styled';\nimport { selectisDeleting } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\n\nexport function ContactItem({ item }) {\n  const isDeleting = useSelector(selectisDeleting);\n  const [id, setID] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    setID(item.id);\n    dispatch(deleteContact(item.id));\n  };\n\n  return (\n    <Li key={item.id}>\n      <span>\n        {item.name}: {item.number}\n      </span>\n      <DeleteButton\n        variant=\"outlined\"\n        type=\"button\"\n        onClick={handleDelete}\n        disabled={isDeleting}\n      >\n        {item.id === id && isDeleting ? <>Deleting...</> : <>Delete</>}\n      </DeleteButton>\n    </Li>\n  );\n}\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Ul = styled.ul`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  justify-content: space-between;\n  padding: 0;\n  margin: 0;\n  margin-top: 20px;\n`;\n\nexport { Ul };\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Ul } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport function ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Ul>\n      {filteredContacts.map(item => (\n        <ContactItem\n          item={item}\n          key={item.id}\n        />\n      ))}\n    </Ul>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  justify-content: center;\n  max-width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 20px;\n\n  border: 2px solid rgba(25, 118, 210, 0.5);\n  border-radius: 8px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport { Form };\n","import { Form } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { selectIsAdding } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const isAdding = useSelector(selectIsAdding);\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const handleAddContact = (contactName, contactNumber) => {\n    const newContact = {\n      name: contactName,\n      number: contactNumber,\n    };\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === contactName.toLowerCase()\n      )\n    ) {\n      alert(`${contactName} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n\n  return (\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n          value={name}\n        />\n        <TextField\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n          value={number}\n        />\n        <Button type=\"submit\" disabled={isAdding} variant=\"contained\">\n          {isAdding ? <>Adding...</> : <>Add contact</>}\n        </Button>\n      </Form>\n  );\n}\n","import TextField from '@mui/material/TextField';\nimport styled from '@emotion/styled';\n\nconst InputFilter = styled(TextField)`\n  max-width: 480px;\n  width: 100%;\n`;\n\nexport { InputFilter };\n","import { selectFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { InputFilter } from './ContactFilter.styled';\nexport function ContactFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const filterInput = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <InputFilter\n      label=\"Find contacts by name\"\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={filterInput}\n      width={400}\n    />\n  );\n}\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { H1, H2, Container, Wrapper } from 'components/App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectisFetching, selectError } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(selectisFetching);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <H1>Add contact to phonebook</H1>\n      <ContactForm />\n      <H2>Your phonebook</H2>\n      <Wrapper>\n        {isFetching && !error ? (\n          <b>Loading contacts...</b>\n        ) : (\n          <>\n            <ContactFilter />\n            <ContactList />\n          </>\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default Contacts\n"],"names":["Li","styled","DeleteButton","Button","ContactItem","item","isDeleting","useSelector","selectisDeleting","useState","id","setID","dispatch","useDispatch","name","number","variant","type","onClick","deleteContact","disabled","Ul","ContactList","filteredContacts","selectFilteredContacts","map","Form","ContactForm","setName","setNumber","isAdding","selectIsAdding","contacts","selectContacts","handleInputChange","event","currentTarget","value","handleAddContact","contactName","contactNumber","newContact","find","contact","toLowerCase","alert","addContact","onSubmit","preventDefault","autoComplete","TextField","label","pattern","title","required","onChange","InputFilter","ContactFilter","filter","selectFilter","setFilter","width","isFetching","selectisFetching","error","selectError","useEffect","fetchContacts","H1","H2"],"sourceRoot":""}